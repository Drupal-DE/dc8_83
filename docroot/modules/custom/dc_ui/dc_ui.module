<?php

/**
 * @file
 * Contains dc_ui.module.
 */

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_editor_js_settings_alter().
 */
function dc_ui_editor_js_settings_alter(array &$settings) {
  foreach (array_keys($settings['editor']['formats']) as $format) {
    if (empty($settings['editor']['formats'][$format]['editorSettings'])) {
      continue;
    }
    if (empty($settings['editor']['formats'][$format]['editorSettings']['protectedSource'])) {
      $settings['editor']['formats'][$format]['editorSettings']['protectedSource'] = [];
    }
    // Allow php tags.
    $settings['editor']['formats'][$format]['editorSettings']['protectedSource'][] = '/<\?[\s\S]*?\?>/g';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_ui_form_taxonomy_term_drupal_version_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Hide fieldset relations - we only have a flat hierarchy.
  $form['relations']['#required'] = FALSE;
  $form['relations']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_ui_form_taxonomy_term_showroom_category_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Hide fieldset relations - we only have a flat hierarchy.
  $form['relations']['#required'] = FALSE;
  $form['relations']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_ui_form_taxonomy_term_news_category_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Hide fieldset relations - we only have a flat hierarchy.
  $form['relations']['#required'] = FALSE;
  $form['relations']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_ui_form_node_book_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add access check for body field.
  $form['field_legacy_content']['#access'] = _dc_ui_access_legacy_content_field();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_ui_form_node_news_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add access check for body field.
  $form['field_legacy_content']['#access'] = _dc_ui_access_legacy_content_field();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_ui_form_node_news_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add access check for body field.
  $form['field_legacy_content']['#access'] = _dc_ui_access_legacy_content_field();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_ui_form_node_book_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add access check for body field.
  $form['field_legacy_content']['#access'] = _dc_ui_access_legacy_content_field();
}

/**
 * Helper function to check for user role.
 *
 */
function _dc_ui_access_legacy_content_field() {
  $user_roles = \Drupal::currentUser()->getRoles();
  if (in_array('administrator', $user_roles)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_views_pre_build().
 */
function dc_ui_views_pre_build(ViewExecutable $view) {
  if ('content_overview' === $view->id()) {
    $view->element['#attached']['library'][] = 'dc_ui/admin.content_overview';
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function dc_ui_theme_registry_alter(&$theme_registry) {
  // Get all block preprocess functions for block and unset uikitty preprocess
  // cause it's causing errors while working with panels.
  $remove_uikitty_preprocess = [
    'block',
    'block__views_block__news_block_news_front',
  ];
  foreach ($remove_uikitty_preprocess as $block) {
    if (isset($theme_registry[$block]['preprocess functions'])) {
      foreach ($theme_registry[$block]['preprocess functions'] as $key => $value) {
        if ($value == 'uikitty_preprocess_block') {
          unset($theme_registry[$block]['preprocess functions'][$key]);
        }
      }
    }
  }
}
